<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style type="text/css">
        body {
            margin-top: 20px;
            color: #69707a;
            padding-top: 70px;
            background-image: url('/images/background.jpg');
            background-repeat: repeat;
            background-size: cover;
            background-attachment: fixed;
        }

        .navbar-custom {
            background-color: #2d2d2d;
            box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
            padding: 10px;
            margin-bottom: 40px;
            border-radius: 0.35rem;
        }

        .navbar-nav {
            flex-direction: row;
        }

        .nav-link {
            color: #fff;
            transition: color 0.3s, background-color 0.3s;
            padding: 8px 15px;
            border-radius: 5px;
            margin: 0 5px;
        }

        .nav-link:hover, .nav-link:focus {
            background-color: #fff;
            color: #2d2d2d;
        }

        .container {
            margin: 0 auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0.15rem 1.75rem 0 rgb(33 40 50 / 15%);
            border-radius: 0.35rem;
        }

        h1 {
            color: #2d2d2d;
        }

        p {
            color: #69707a;
        }

        .navbar-right {
            margin-left: auto;
        }
         
        .dropdown-menu {
            background-color: #2d2d2d;
        }

        .dropdown-menu a {
            color: #fff;
        }

        .dropdown-menu a:hover {
            background-color: #fff;
            color: #2d2d2d;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-custom fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="/" style="color: #fff;">Dash</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Management
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                            <% if (role === 'ADMIN') { %>
                            <li><a class="dropdown-item" href="/users">Staffs</a></li>
                            <% } %>
                            <li><a class="dropdown-item" href="/products">Products</a></li>
                            <li><a class="dropdown-item" href="/customers">Customers</a></li>
                            <li><a class="dropdown-item" href="/orders">Orders</a></li>
                        </ul>
                    </li>
                </ul>
                <ul class="navbar-nav navbar-right">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownUserLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="data:image/jpeg;base64,<%= avatar %>" alt="User" style="width: 30px; height: 30px; border-radius: 50%; margin-right: 5px;">
                            <%= firstName %>
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdownUserLink">
                            <li><a class="dropdown-item" href="/users/profile">Profile</a></li>
                            <li><a class="dropdown-item" href="/users/update">Change Password</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <form action="/users/logout" method="post">
                            <button class="nav-link btn btn-link" type="submit">Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    

    <div class="container mt-5">
        <h1 class="mb-4">Order Management</h1>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addOrderModal">Add Order</button>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Order ID</th>
                    <th scope="col">Customer</th>
                    <th scope="col">Date</th>
                    <th scope="col">Status</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                <%if(data){
                    data.forEach(order=>{%>
                    <tr>
                        <th scope="row">1</th>
                        <td><%=order.orderId%></td>
                        <td><%=order.customerName%></td>
                        <td><%=order.date%></td>
                        <td><%=order.status%></td>
                        <td>
                            <button class="btn btn-primary btn-sm view-btn" data-bs-toggle="modal" data-bs-target="#viewModal" data-order-id="<%=order.orderId%>">View</button>
                            <%if(order.status!=='Cancelled'&&order.status!=='Paid'){%>    
                                <button class="btn btn-success btn-sm edit-btn" data-bs-toggle="modal" data-bs-target="#editModal" onclick="openEditModal('<%=order.orderId%>')">Edit</button>
                            <%}
                            if(order.status==='Cancelled'){%>    
                                <button class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteModal" onclick="openDeleteModal('<%= order.orderId %>')">Delete</button>
                            <%}%>
                        </td>
                    </tr>
                <%})}%>
            </tbody>
        </table>
    </div>

    <!-- Add Order Modal -->
    <div class="modal fade" id="addOrderModal" tabindex="-1" aria-labelledby="addOrderModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addOrderModalLabel">Add Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="customerName" class="form-label">Customer Name</label>
                        <input type="text" class="form-control" id="addCustomerName" placeholder="Customer Name">
                        <div class="alert alert-danger" style="display: none;" id="errCustomerName" role="alert">Please enter a valid customer name.</div>
                    </div>
                    <div class="mb-3">
                        <label for="customerPhoneNumber" class="form-label">Phone Number</label>
                        <input type="text" class="form-control" id="addCustomerPhoneNumber" placeholder="Phone Number">
                        <div class="alert alert-danger" style="display: none;" id="errCustomerPhoneNumber" role="alert">Please enter a valid customer name.</div>
                    </div>
                    <div class="mb-3">
                        <label for="customerAddress" class="form-label">Address</label>
                        <input type="text" class="form-control" id="addCustomerAddress" placeholder="Address">
                    </div>
                    <div class="mb-3">
                        <label for="salespersonName" class="form-label">Salesperson Name</label>
                        <select class="form-select" id="addSalespersonName">
                            <option value="">Select Salesperson</option>
                            <% if(salepersons) { %>
                                <% salepersons.forEach((salesperson) => { %>
                                    <option value="<%- salesperson._id %>"><%- salesperson.fullname %></option>
                                <% }) %>
                            <% } %>
                        </select>
                        <div class="alert alert-danger" style="display: none;" id="errSaleperson" role="alert">Please select a valid salesperson.</div>
                    </div>
                    <div class="mb-3">
                        <label for="saleDate" class="form-label">Sale Date</label>
                        <input type="date" class="form-control" id="addSaleDate" readonly>
                        <div class="alert alert-danger" style="display: none;" id="errSaleDate" role="alert">Please select a valid sale date.</div>
                    </div>
    
                    <div class="mb-3">
                        <div class="overflow-auto" style="max-height: 200px;">
                            <label for="displayRow" class="form-label">Selected Products</label>
                            <table class="table" id="displayRow">
                                <thead>
                                    <tr>
                                        <th>Product ID</th>
                                        <th>Quantity</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td id="displayProductId"></td>
                                        <td id="displayQuantity"></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
    
                    <div class="mb-3">
                        <% if(products) { %>
                            <label for="addProductId" class="form-label">Select Product</label>
                            <select class="form-select" id="addProductId">
                                <option value="">Select Products</option>
                                <% products.forEach((item) => { %>
                                    <option value="<%- item._id %>|<%- item.name %>">
                                        <%- item.name %> - $<%- item.retail_price %>
                                    </option>
                                <% }) %>
                            </select>
                            <div class="alert alert-danger" style="display: none;" id="errProduct" role="alert">Please select a product and enter a quantity.</div>
                            <label for="addQuantity" class="form-label mt-3">Enter Quantity</label>
                            <input type="number" class="form-control" id="addQuantity" placeholder="Quantity">
                            <div class="alert alert-danger" style="display: none;" id="errQuantity" role="alert">Please enter a valid quantity.</div>
                            <button type="button" class="btn btn-primary mt-3" id="addProductToDisplay">Add Product</button>
                        <% } %>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="createOrder()">Add Order</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- View Modal -->
    <div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="viewModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="viewModalLabel">View Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeModal('#viewModal')"></button>
                </div>
                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-4">Order ID:</dt>
                        <dd class="col-sm-8" id="modalOrderId"></dd>

                        <dt class="col-sm-4">Customer Name:</dt>
                        <dd class="col-sm-8" id="modalCustomerName"></dd>

                        <dt class="col-sm-4">Customer Phone Number:</dt>
                        <dd class="col-sm-8" id="modalCustomerPhoneNumber"></dd>

                        <dt class="col-sm-4">Salesperson Name:</dt>
                        <dd class="col-sm-8" id="modalSalespersonName"></dd>

                        <dt class="col-sm-4">Date:</dt>
                        <dd class="col-sm-8" id="modalDate"></dd>

                        <dt class="col-sm-4">Total Price:</dt>
                        <dd class="col-sm-8" id="modalTotalPrice"></dd>

                        <dt class="col-sm-4">Status:</dt>
                        <dd class="col-sm-8" id="modalStatus"></dd>
                    </dl>
                    <h6>Products:</h6>
                    <table class="table" id="modalProductsTable">
                        <thead>
                            <tr>
                                <th>Product ID</th>
                                <th>Product Name</th>
                                <th>Quantity</th>
                                <th>Price</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <dl class="row" id="cashDetails">
                        <dt class="col-sm-3">Cash Received:</dt>
                        <dd class="col-sm-3" id="modalCashReceived"></dd>
                    
                        <dt class="col-sm-3">Cash Return:</dt>
                        <dd class="col-sm-3" id="modalCashReturn"></dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="closeModal('#viewModal')">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editOrderForm">
                        <div class="mb-3">
                            <label for="editCustomerName" class="form-label">Customer Name</label>
                            <input type="text" class="form-control" id="editCustomerName" name="customerName" placeholder="Customer Name" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="editSalespersonName" class="form-label">Salesperson Name</label>
                            <input type="text" class="form-control" id="editSalespersonName" name="salespersonId" readonly/> 
                        </div>
                        <div class="mb-3">
                            <label for="editSaleDate" class="form-label">Sale Date</label>
                            <input type="text" class="form-control" id="editSaleDate" name="saleDate" readonly>
                        </div>
                        <div class="mb-3">
                            <h6>Products:</h6>
                            <table class="table" id="modalEditProductsTable">
                                <thead>
                                    <tr>
                                        <th>Product ID</th>
                                        <th>Product Name</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                        <div class="mb-3">
                            <label for="editTotalPrice" class="form-label">Total Price</label>
                            <input type="number" class="form-control" id="editTotalPrice" name="totalPrice" placeholder="Total Price" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="editCashReceive" class="form-label">Cash Receive</label>
                            <input type="number" class="form-control" id="editCashReceive" name="cashReceive">
                        </div>
                        <div class="mb-3">
                            <label for="editCashReturn" class="form-label">Cash Return</label>
                            <input type="number" class="form-control" id="editCashReturn" name="cashReturn" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="editOrderStatus" class="form-label">Order Status</label>
                            <select class="form-select" id="editOrderStatus" name="status">
                                <option value="Pending">Pending</option>
                                <option value="Processing">Processing</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="saveOrderChanges">Save changes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Delete Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">Delete Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this order?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div>
    </div>    

    <!-- Message Modal -->
    <div class="modal fade" id="messageModal" tabindex="-1" aria-labelledby="messageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="messageModalLabel">Message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="messageModalBody">
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" 
    integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" 
    crossorigin="anonymous"></script>

    <script>
        var integerInput = document.getElementById('addQuantity');

        integerInput.addEventListener('input', function () {
            this.value = this.value.replace(/[^\d]/g, '');
        });

        window.onload = function() {
            var today = new Date();
            var dd = String(today.getDate()).padStart(2, '0');
            var mm = String(today.getMonth() + 1).padStart(2, '0');
            var yyyy = today.getFullYear();
            today = yyyy + '-' + mm + '-' + dd;
            document.getElementById('addSaleDate').value = today;
        };


        let orderAddedProductList = [];
    
        document.getElementById('addProductToDisplay').addEventListener('click', function () {
            var selectedProductId = document.getElementById('addProductId').value;
            var selectedQuantity = document.getElementById('addQuantity').value;
    
            var errProduct = document.getElementById('errProduct');
            if (!selectedProductId || !selectedQuantity || selectedQuantity < 1) {
                errProduct.innerHTML = 'Please select a product and enter its quantity.';
                errProduct.style.display = 'block';
                return;
            } else {
                errProduct.innerHTML = '';
                errProduct.style.display = 'none';
            }
    
            var values = selectedProductId.split('|');
            var existingProduct = orderAddedProductList.find(product => product.productId === values[0]);
    
            if (existingProduct) {
                if ((parseInt(existingProduct.quantity) + parseInt(selectedQuantity)) > 10000) {
                    errProduct.innerHTML = 'This Product\'s quantity is too large';
                    errProduct.style.display = 'block';
                    return;
                } else {
                    errProduct.innerHTML = '';
                    errProduct.style.display = 'none';
                }
                existingProduct.quantity = parseInt(existingProduct.quantity) + parseInt(selectedQuantity);
            } else {
                orderAddedProductList.push({
                    productId: values[0],
                    productName: values[1],
                    quantity: selectedQuantity
                });
            }
    
            updateDisplayTable();
        });
    
        function updateDisplayTable() {
            var displayTableBody = document.getElementById('displayRow').getElementsByTagName('tbody')[0];
            displayTableBody.innerHTML = "";
    
            orderAddedProductList.forEach(function (product) {
                var newRow = displayTableBody.insertRow(displayTableBody.rows.length);
                var cell1 = newRow.insertCell(0);
                var cell2 = newRow.insertCell(1);
    
                cell1.innerText = product.productName;
                cell2.innerText = product.quantity;
            });
        }
    
        function createOrder() {
            var selectedCustomerName = document.getElementById('addCustomerName').value;
            var selectedSaleperson = document.getElementById('addSalespersonName').value;
            var selectedSaleDate = document.getElementById('addSaleDate').value;
            var selectedCustomerPhoneNumber = document.getElementById('addCustomerPhoneNumber').value;
            var selectedCustomerAddress = document.getElementById('addCustomerAddress').value;

            

            var errCustomerName = document.getElementById('errCustomerName');
            var errSaleperson = document.getElementById('errSaleperson');
            var errSaleDate = document.getElementById('errSaleDate');
            var errCustomerPhoneNumber = document.getElementById('errCustomerPhoneNumber');


            if (!selectedCustomerName) {
                errCustomerName.innerHTML = 'Please enter a valid customer name.';
                errCustomerName.style.display = 'block';
            } else {
                errCustomerName.innerHTML = '';
                errCustomerName.style.display = 'none';
            }

            if (!selectedCustomerPhoneNumber) {
                errCustomerPhoneNumber.innerHTML = 'Please enter a valid phone number.';
                errCustomerPhoneNumber.style.display = 'block';
            } else {
                errCustomerPhoneNumber.innerHTML = '';
                errCustomerPhoneNumber.style.display = 'none';
            }

            if (!selectedSaleperson) {
                errSaleperson.innerHTML = 'Please select a valid salesperson.';
                errSaleperson.style.display = 'block';
            } else {
                errSaleperson.innerHTML = '';
                errSaleperson.style.display = 'none';
            }

            if (!selectedSaleDate) {
                errSaleDate.innerHTML = 'Please select a valid sale date.';
                errSaleDate.style.display = 'block';
            } else {
                errSaleDate.innerHTML = '';
                errSaleDate.style.display = 'none';
            }

            var errProduct = document.getElementById('errProduct');
            if (orderAddedProductList.length === 0) {
                errProduct.innerHTML = 'Please add at least one product to the order.';
                errProduct.style.display = 'block';
            } else {
                errProduct.innerHTML = '';
                errProduct.style.display = 'none';
            }

            if (selectedCustomerName &&
                selectedSaleperson &&
                selectedSaleDate &&
                orderAddedProductList.length > 0 &&
                selectedCustomerPhoneNumber) {
                var orderData = {
                    customerName: selectedCustomerName,
                    salespersonId: selectedSaleperson,
                    saleDate: selectedSaleDate,
                    products: orderAddedProductList,
                    customerPhoneNumber: selectedCustomerPhoneNumber,
                    customerAddress: selectedCustomerAddress
                };

                fetch('/orders/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(orderData),
                })
                .then(response => response.json())
                .then(data => {
                    showMessageModal('Success: '+ data)
                    $('#addProductModal').modal('hide');
                    $('#addProductModal').on('hidden.bs.modal', function () {
                        clearInputFields(); 
                    });
                    window.location.reload();
                })
                .catch((error) => {
                    showMessageModal('Error: '+ error)
                });
            }
        }

        function clearInputFields() {
            document.getElementById('addProductId').value = '';
            document.getElementById('addQuantity').value = '';

            document.getElementById('errProduct').innerHTML = '';
            document.getElementById('errQuantity').innerHTML = '';
            document.getElementById('errCustomerPhoneNumber').innerHTML = '';

            document.getElementById('addCustomerName').value = '';
            document.getElementById('addSalespersonName').value = '';
            document.getElementById('addSaleDate').value = '';
            document.getElementById('addCustomerPhoneNumber').value = '';
        }

        document.querySelectorAll('.view-btn').forEach(button => {
            button.addEventListener('click', function() {
                const orderId = this.getAttribute('data-order-id');
                fetch(`/orders/${orderId}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response error');
                        }
                        return response.json();
                    })
                    .then(data => {
                        getOrderDataView(data);
                        new bootstrap.Modal(document.getElementById('viewModal')).show();
                    })
                    .catch(error => {
                        
                        showMessageModal('error in fetch operation: '+ error);
                    });
            });
        });

        function getOrderDataView(orderData) {
            
            document.getElementById('modalOrderId').textContent = orderData.orderId;
            document.getElementById('modalCustomerName').textContent = orderData.customerName;
            document.getElementById('modalCustomerPhoneNumber').textContent = orderData.customerPhone;
            document.getElementById('modalSalespersonName').textContent = orderData.salespersonName;
            document.getElementById('modalDate').textContent = new Date(orderData.date).toLocaleDateString();
            document.getElementById('modalTotalPrice').textContent = orderData.totalPrice;
            document.getElementById('modalStatus').textContent = orderData.status;

            const cashReceivedElement = document.getElementById('modalCashReceived');
            const cashReturnElement = document.getElementById('modalCashReturn');
            const cashDetailsElement = document.getElementById('cashDetails');

            

            const productsTableBody = document.querySelector('#modalProductsTable tbody');
            productsTableBody.innerHTML = '';
            orderData.products.forEach(product => {
                let row = productsTableBody.insertRow();
                row.insertCell(0).textContent = product.productId;
                row.insertCell(1).textContent = product.productName;
                row.insertCell(2).textContent = product.quantity;
                row.insertCell(3).textContent = product.price;
            });
            if (orderData.cashReceive !== undefined && orderData.cashReturn !== undefined) {
                cashReceivedElement.textContent ='$'+ orderData.cashReceive;
                cashReturnElement.textContent ='$'+ orderData.cashReturn;
                cashDetailsElement.style.display = '';
            } else {
                cashDetailsElement.style.display = 'none'; 
            }
        }

        document.getElementById('editCashReceive').addEventListener('input', function () {
            const cashReceive = parseInt(this.value);
            const total = parseInt(document.getElementById('editTotalPrice').value);

            if (!isNaN(cashReceive)) {
                document.getElementById('editCashReturn').value =cashReceive - total;
            }
        });

        
        function openEditModal(orderId) {
            fetch(`/orders/${orderId}`)
                .then(response => response.json())
                .then(order => {
                    document.getElementById('editCustomerName').value = order.customerName;
                    document.getElementById('editSalespersonName').value = order.salespersonName;
                    document.getElementById('editSaleDate').value = order.date;
                    document.getElementById('editTotalPrice').value = order.totalPrice;
                    document.getElementById('editOrderStatus').value = order.status;
                    document.getElementById('editCashReceive').value = order.cashReceive || '';
                    document.getElementById('editCashReturn').value = document.getElementById('editCashReceive').value -  order.totalPrice;

                    const productsTableBody = document.querySelector('#modalEditProductsTable tbody');
                    productsTableBody.innerHTML = ''; 
                    order.products.forEach(product => {
                        let row = productsTableBody.insertRow();
                        row.insertCell(0).textContent = product.productId;
                        row.insertCell(1).textContent = product.productName;
                        row.insertCell(2).textContent = product.quantity;
                        row.insertCell(3).textContent = product.price;
                    });

                    document.getElementById('saveOrderChanges').onclick = function() {
                        saveOrderChanges(orderId);
                    };
                    
                })
                .catch(error => showMessageModal('Error: '+ error));
        }

        function saveOrderChanges(orderId) {
            if (document.getElementById('editCashReturn').value>=0&&document.getElementById('editCashReturn').value!==undefined)
            {
                console.log(document.getElementById('editCashReturn').value)

                const formData = new FormData(document.getElementById('editOrderForm'));

                fetch(`/orders/${orderId}`, {
                    method: 'PATCH',
                    body: JSON.stringify(Object.fromEntries(formData)),
                    headers: {
                        'Content-Type': 'application/json'
                    },
                })
                .then(response => response.json())
                .then(data => {
                    showMessageModal('Order updated')
                    closeModal('#editModal')
                })
                .catch(error => showMessageModal('Error: '+ error));
            }else{
                showMessageModal('Invalid Cash Received')
            }
            
        }


        
    function openDeleteModal(orderId) {
      
       
        const deleteButton = document.querySelector('#deleteModal .btn-danger');
        deleteButton.onclick = function() {
            deleteOrder(orderId);
        };
    }

    function deleteOrder(orderId) {
        fetch(`/orders/${orderId}`, {
            method: 'DELETE',
        })
        .then(response => {
            if (response.ok) {
                showMessageModal('Order deleted successfully.')
                closeModal('#deleteModal')
            } else {
                showMessageModal('Error in deletion')
            }
        })
        .catch(error => showMessageModal('Error: '+ error));
    }


        function closeModal(modalId)
        {
            $(modalId).modal('hide');
            $(modalId).on('hidden.bs.modal');
            window.location.reload();
        }

        function showMessageModal(message) {
            document.getElementById('messageModalBody').textContent = message;
            const messageModal = new bootstrap.Modal(document.getElementById('messageModal'));
            messageModal.show();
        }
    </script>
</body>
</html>